apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.androidCompileSdkVersion
    buildToolsVersion '28.0.3'

    defaultConfig {
        applicationId "com.tzutalin.dlibtest"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.releaseVersionCode
        versionName "${rootProject.ext.releaseVersionName}"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        ndk {
            //设置支持的SO库架构
            abiFilters "armeabi-v7a", "x86", "arm64-v8a", "x86_64"
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main {
            assets.srcDirs = ['src/main/res', 'src/main/res/raw', 'src/main/assets', 'src/main/assets/']
            jniLibs.srcDirs(['libs'])
        }
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}


buildscript {
    repositories {
        mavenCentral()
    }
}

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    //noinspection GradleCompatible
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support:cardview-v7:27.1.1'
    implementation 'com.android.support:design:28.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.2'
    configurations.all {
        resolutionStrategy.eachDependency {
            DependencyResolveDetails details ->
                def requested = details.requested
                if (requested.group == 'com.android.support') {
                    if (!requested.name.startsWith("multidex")) {
                        details.useVersion '27.1.1'
                    }
                }
        }
    }
    implementation 'com.github.dexafree:materiallist:3.0.1'
    implementation 'com.jakewharton.timber:timber:4.5.1'
    implementation 'junit:junit:4.12'
    //implementation 'com.google.android.material:material:1.1.0-alpha05'
    implementation 'de.hdodenhof:circleimageview:3.0.0'
    // implementation 'com.android.support:cardview-v7:28.0.0'
    implementation 'com.android.support:recyclerview-v7:27.1.1'
    implementation 'com.github.bumptech.glide:glide:4.9.0'
    implementation 'com.squareup.okhttp3:okhttp:3.14.1'
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation project(':dlib')
    // Add AndroidJUnit
    androidTestImplementation 'com.android.support:support-annotations:27.1.1'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test:rules:1.0.2'
    // Optional -- Hamcrest library
    androidTestImplementation 'org.hamcrest:hamcrest-library:1.3'
    implementation files('libs/GLWallpaperService.jar')
}
apply plugin: 'com.jakewharton.hugo'
